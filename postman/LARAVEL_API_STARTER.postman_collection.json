{
	"info": {
		"_postman_id": "c2e4cca8-468f-4d00-97f4-b38815442c58",
		"name": "LARAVEL_API_STARTER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Seta o token no header\r",
									"let jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable(\"token\", jsonData.data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "admin@admin.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{ip}}/auth/login",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/auth/me",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh-token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Seta o token no header\r",
									"let jsonData = JSON.parse(responseBody)\r",
									"postman.setEnvironmentVariable(\"token\", jsonData.data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/auth/refresh-token",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/auth/logout",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "index",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "http://{{ip}}/users",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Admin",
									"type": "text"
								},
								{
									"key": "email",
									"value": "admin@admin.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "password_confirmation",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{ip}}/users",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "search",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "page",
									"value": "2",
									"type": "text",
									"disabled": true
								},
								{
									"key": "order_by",
									"value": "email",
									"type": "text",
									"disabled": true
								},
								{
									"key": "sorted_by",
									"value": "desc",
									"type": "text",
									"disabled": true
								},
								{
									"key": "date_start",
									"value": "2020-01-01",
									"type": "text",
									"disabled": true
								},
								{
									"key": "date_end",
									"value": "2021-01-01",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://{{ip}}/users/search",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "show",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{ip}}/users/4",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checa se o retorno da requisicao está com status 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    ",
									"});//Seta o token no header",
									"var varHeader = postman.getResponseHeader(\"Authorization\");",
									"var arr_tmp = varHeader.split(\" \");",
									"postman.setEnvironmentVariable(\"token\", arr_tmp[1]);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded",
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "New Name",
									"type": "text",
									"disabled": true
								},
								{
									"key": "email",
									"value": "new@admin.com",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://{{ip}}/users/4",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{ip}}/users/4",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"path": [
								"users",
								"4"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}